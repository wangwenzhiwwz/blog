<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github-添加ssh</title>
      <link href="/2022/06/11/17/12.11github-%E6%B7%BB%E5%8A%A0ssh/"/>
      <url>/2022/06/11/17/12.11github-%E6%B7%BB%E5%8A%A0ssh/</url>
      
        <content type="html"><![CDATA[<h1 id="github设置添加SSH"><a href="#github设置添加SSH" class="headerlink" title="github设置添加SSH"></a>github设置添加SSH</h1><p>很多朋友在用github管理项目的时候，都是直接使用https url克隆到本地，当然也有有些人使用 SSH url 克隆到本地。然而，为什么绝大多数人会使用https url克隆呢？</p><p>这是因为，使用https url克隆对初学者来说会比较方便，复制https url 然后到 git Bash 里面直接用clone命令克隆到本地就好了。而使用 SSH url 克隆却需要在克隆之前先配置和添加好 SSH key 。</p><p>因此，如果你想要使用 SSH url 克隆的话，你必须是这个项目的拥有者。否则你是无法添加 SSH key 的。</p><h2 id="https-和-SSH-的区别："><a href="#https-和-SSH-的区别：" class="headerlink" title="https 和 SSH 的区别："></a>https 和 SSH 的区别：</h2><p>1、前者可以随意克隆github上的项目，而不管是谁的；而后者则是你必须是你要克隆的项目的拥有者或管理员，且需要先添加 SSH key ，否则无法克隆。</p><p>2、https url 在push的时候是需要验证用户名和密码的；而 SSH 在push的时候，是不需要输入用户名的，如果配置SSH key的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。</p><h2 id="在-github-上添加-SSH-key-的步骤："><a href="#在-github-上添加-SSH-key-的步骤：" class="headerlink" title="在 github 上添加 SSH key 的步骤："></a>在 github 上添加 SSH key 的步骤：</h2><p>1、首先需要检查你电脑是否已经有 SSH key<br>运行 git Bash 客户端，输入如下代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ls</span><br></pre></td></tr></table></figure></p><p>这两个命令就是检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件，如果文件已经存在，那么你可以跳过步骤2，直接进入步骤3。</p><p>2、创建一个 SSH key<br>$ ssh-keygen -t rsa -C “your_email@example.com”<br>代码参数含义：</p><p>-t 指定密钥类型，默认是 rsa ，可以省略。<br>-C 设置注释文字，比如邮箱。<br>-f 指定密钥文件存储文件名。</p><p>以上代码省略了 -f 参数，因此，运行上面那条命令后会让你输入一个文件名，用于保存刚才生成的 SSH key 代码，如：</p><p>Generating public/private rsa key pair.<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span></span><br></pre></td></tr></table></figure></p><p>当然，你也可以不输入文件名，使用默认文件名（推荐），那么就会生成 id_rsa 和 id_rsa.pub 两个秘钥文件。</p><p>接着又会提示你输入两次密码（该密码是你push文件的时候要输入的密码，而不是github管理者的密码），</p><p>当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了，如：</p><p>Enter passphrase (empty for no passphrase):<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enter same passphrase again:</span></span><br></pre></td></tr></table></figure></p><p>接下来，就会显示如下代码提示，如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/you/.ssh/id_rsa.</span><br><span class="line"><span class="comment"># Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.</span></span><br><span class="line"><span class="comment"># The key fingerprint is:</span></span><br><span class="line"><span class="comment"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com</span></span><br></pre></td></tr></table></figure></p><p>当你看到上面这段代码的收，那就说明，你的 SSH key 已经创建成功，你只需要添加到github的SSH key上就可以了。</p><p>3、添加你的 SSH key 到 github上面去<br>a、首先你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器打开文件复制，也可以用git命令复制该文件的内容，如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>b、登录你的github账号，从又上角的设置（ Account Settings ）进入，然后点击菜单栏的 SSH key 进入页面添加 SSH key。</p><p>c、点击 Add SSH key 按钮添加一个 SSH key 。把你复制的 SSH key 代码粘贴到 key 所对应的输入框中，记得 SSH key 代码的前后不要留有空格或者回车。当然，上面的 Title 所对应的输入框你也可以输入一个该 SSH key 显示在 github 上的一个别名。默认的会使用你的邮件名称。</p><p>4、测试一下该SSH key<br>在git Bash 中输入以下代码<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>当你输入以上代码时，会有一段警告代码，如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The authenticity of host <span class="string">'github.com (207.97.227.239)'</span> can<span class="string">'t be established.</span></span><br><span class="line"><span class="string"># RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span></span><br><span class="line"><span class="string"># Are you sure you want to continue connecting (yes/no)?</span></span><br></pre></td></tr></table></figure></p><p>这是正常的，你输入 yes 回车既可。如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码，如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Enter passphrase <span class="keyword">for</span> key <span class="string">'/c/Users/Administrator/.ssh/id_rsa'</span>:</span><br></pre></td></tr></table></figure></p><p>当然如果你密码输错了，会再要求你输入，知道对了为止。</p><p>注意：输入密码时如果输错一个字就会不正确，使用删除键是无法更正的。</p><p>密码正确后你会看到下面这段话，如：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not</span></span><br><span class="line"><span class="string"># provide shell access.</span></span><br></pre></td></tr></table></figure></p><p>如果用户名是正确的,你已经成功设置SSH密钥。如果你看到 “access denied” ，者表示拒绝访问，那么你就需要使用 https 去访问，而不是 SSH 。</p><p>如果你有什么疑问或指正，请留言。</p><p>产考文档：<a href="https://help.github.com/articles/generating-ssh-keys" target="_blank" rel="noopener">generating-ssh-keys</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Xray一键安装脚本</title>
      <link href="/2022/03/15/2022/Xray/"/>
      <url>/2022/03/15/2022/Xray/</url>
      
        <content type="html"><![CDATA[<h1 id="Xray一键脚本使用方法"><a href="#Xray一键脚本使用方法" class="headerlink" title="Xray一键脚本使用方法"></a>Xray一键脚本使用方法</h1><p>Xray一键脚本使用步骤如下：</p><ol><li>准备一个境外服务器，想服务器速度快请参考 搬瓦工VPS购买教程 或从  CN2 GIA VPS商家推荐 选购，想ip被封后免费换请参考：购买vultr服务器超详细图文教程。</li></ol><p>如果用VMESS+WS+TLS或者VLESS系列协议，则还需一个域名。对域名没有要求，国内/国外注册的都可以，不需要备案，不会影响使用，也不会带来安全/隐私上的问题。购买域名可参考：Namesilo购买域名详细教程。</p><p>值得一提的是本Xray一键脚本支持ipv6 only服务器，但是不建议用只有ipv6的VPS用来科学上网。</p><ol><li><p>如果vps运营商开启了防火墙（阿里云、Ucloud、腾讯云、AWS、GCP等商家默认有，搬瓦工/hostdare/vultr等商家默认关闭），请先登录vps管理后台放行80和443端口，否则可能会导致获取证书失败。此外，本脚本支持上传自定义证书，可跳过申请证书这一步，也可用在NAT VPS上。</p></li><li><p>ssh连接到服务器。Windows系统请参考 Bitvise连接Linux服务器教程，mac用户请参考 Mac电脑连接Linux教程。</p></li><li><p>复制（或手动输入）下面命令到终端：</p></li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL https://cdn.jsdelivr.net/gh/Misaka-blog/Xray-script@master/xray.sh)</span><br></pre></td></tr></table></figure><p>按回车键，将出现如下操作菜单。如果菜单没出现，</p><h2 id="CentOS系统请输入"><a href="#CentOS系统请输入" class="headerlink" title="CentOS系统请输入"></a>CentOS系统请输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y curl</span><br></pre></td></tr></table></figure><h2 id="Ubuntu-Debian系统请输入"><a href="#Ubuntu-Debian系统请输入" class="headerlink" title="Ubuntu/Debian系统请输入"></a>Ubuntu/Debian系统请输入</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install -y curl</span><br></pre></td></tr></table></figure><p> 然后再次运行上面的命令：</p>]]></content>
      
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DiskGenisPro数据管理软件</title>
      <link href="/2022/02/19/2022/DiskGenisPro/"/>
      <url>/2022/02/19/2022/DiskGenisPro/</url>
      
        <content type="html"><![CDATA[<h1 id="DiskGenius"><a href="#DiskGenius" class="headerlink" title="DiskGenius"></a><a href="https://developer.lanzoug.com/file/?CG5SbA4/VWRSW1ZuBDECblBvBj5SSQNoBnIBbFZNUDQAbldpXHQCJQQCAydWbQEuAy9TYwBxV2RXfgQzUyFXYwgxUjMOfVV5UjxWNgR+AkBQYgZwUiMD0Qa/AdZWiFB/AEFXZFxkAjAEfAMwVnoBZQN/UzAANlc5VzUEXVNmVzIINVI3DmVVMlI8VjcEZgIzUDMGJVJrA3IGPAE1Vj1QZQAzVzdcNwJhBGUDc1ZyAXADZFNkAG9XZ1dgBC1TP1dhCCdSNA5kVS5SNFY3BGcCM1A/BjVSOQM4BjABMFY8UGcANlczXDMCNARiAzRWYwE4A2BTZwBnV2JXNQRhU2xXNAg8UmAOZlU1UipWZQQoAmZQLAZ2Un4DZAZzAW5WblBsADNXOFw2Am4EYwNgViQBdAMwUzsAOlczV20EM1M5V2IIPVI3DmdVMFIyVjcEaQItUCQGJVJrA20GdgE6VjtQZwA0VzVcMwJmBGMDYFY0ATUDf1MjAC9XIldtBDNTOldvCDxSPA5kVTFSM1Y2BGMCJVB/BmpSfQM8BjABNlY5UH8AMVcxXDkCeARqA2FWLAE3A28=" target="_blank" rel="noopener">DiskGenius</a></h1><p>是国产分区软件中非常强大的一款分区工具，拥有磁盘分区管理，分区修复、数据恢复等等功能，DiskGenius提供了免费版本，不过没有数据恢复等功能，大家可以使用DiskGenius专业版，本版是DiskGenius破解版，支持IDE、SCSI、SATA等各种类型的硬盘。支持U盘、USB硬盘、存储卡(闪存卡)。支持FAT12/FAT16/FAT32/NTFS/EXT3文件系统。，已经完美激活，推荐大家下载使用。</p><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a><a href="https://clamowo.lanzouy.com/i6I6beojs4j" target="_blank" rel="noopener">下载地址</a></h1><p><a href="https://clamowo.lanzouy.com/b05agns3g" target="_blank" rel="noopener">蓝奏云</a></p><p><a href="http://shandianpan.com/f/5rhk" target="_blank" rel="noopener">闪电盘</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle（甲骨文）免费云服务器注册指南及故障解决！</title>
      <link href="/2021/12/21/2021/oracle/"/>
      <url>/2021/12/21/2021/oracle/</url>
      
        <content type="html"><![CDATA[<h1 id="所有命令"><a href="#所有命令" class="headerlink" title="所有命令"></a>所有命令</h1><h2 id="切换到-root-用户"><a href="#切换到-root-用户" class="headerlink" title="切换到 root 用户"></a>切换到 root 用户</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><h2 id="升级系统"><a href="#升级系统" class="headerlink" title="升级系统"></a>升级系统</h2><p>CentOS系统执行以下命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum update -y &amp;&amp; yum install -y socat</span><br></pre></td></tr></table></figure></p><p>Debian/Ubuntu系统执行以下命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y curl &amp;&amp; apt install -y socat</span><br></pre></td></tr></table></figure></p><h2 id="防火墙相关命令"><a href="#防火墙相关命令" class="headerlink" title="防火墙相关命令"></a>防火墙相关命令</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state                   # 查看防火墙状态</span><br><span class="line">systemctl stop firewalld.service       # 停止防火墙</span><br><span class="line">systemctl disable firewalld.service    # 禁止防火墙开机自启</span><br></pre></td></tr></table></figure><h2 id="甲骨文-oracle-开启-root-密码-登录"><a href="#甲骨文-oracle-开启-root-密码-登录" class="headerlink" title="甲骨文 ( oracle ) 开启 root + 密码 登录"></a>甲骨文 ( oracle ) 开启 root + 密码 登录</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">echo root:V2rayssr |chpasswd root</span><br><span class="line">sed -i &apos;s/^#\?PermitRootLogin.*/PermitRootLogin yes/g&apos; /etc/ssh/sshd_config;</span><br><span class="line">sed -i &apos;s/^#\?PasswordAuthentication.*/PasswordAuthentication yes/g&apos; /etc/ssh/sshd_config;</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h2 id="BBR2加速"><a href="#BBR2加速" class="headerlink" title="BBR2加速"></a>BBR2加速</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -q -O bbr2.sh &quot;https://github.com/yeyingorg/bbr2.sh/raw/master/bbr2.sh&quot; &amp;&amp; chmod +x bbr2.sh &amp;&amp; bash bbr2.sh auto</span><br></pre></td></tr></table></figure><h2 id="安装-amp-升级x-ui面板一键脚本"><a href="#安装-amp-升级x-ui面板一键脚本" class="headerlink" title="安装&amp;升级x-ui面板一键脚本"></a>安装&amp;升级x-ui面板一键脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/vaxilu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure><h2 id="运行Acme脚本"><a href="#运行Acme脚本" class="headerlink" title="运行Acme脚本"></a>运行Acme脚本</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><h2 id="申请证书及密钥"><a href="#申请证书及密钥" class="headerlink" title="申请证书及密钥"></a>申请证书及密钥</h2><p>PS：修改代码中注释的域名，改为你自己的域名<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~/.acme.sh/acme.sh --register-account -m xxxx@gmail.com</span><br><span class="line">~/.acme.sh/acme.sh  --issue -d 你的域名   --standalone</span><br></pre></td></tr></table></figure></p><p>下载证书及密钥<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~/.acme.sh/acme.sh --installcert -d 你的域名 --key-file /root/private.key --fullchain-file /root/cert.crt</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FinalShell</title>
      <link href="/2019/08/26/2019/FinalShellSSH/"/>
      <url>/2019/08/26/2019/FinalShellSSH/</url>
      
        <content type="html"><![CDATA[<p>FinalShell SSH工具,服务器管理,远程桌面加速软件,支持Windows,macOS,Linux,版本2.9.8,更新时间2019.6.19<br>wntr 2017-01-17 11:08  30月前  418704 阅读 0 回复 FinalShell<br>FinalShell是一体化的的服务器,网络管理软件,不仅是ssh客户端,还是功能强大的开发,运维工具,充分满足开发,运维需求.<br>特色功能:<br>免费海外服务器远程桌面加速,ssh加速,双边tcp加速,内网穿透.</p><p>Windows版下载地址:<br><a href="http://www.hostbuf.com/downloads/finalshell_install.exe" target="_blank" rel="noopener">http://www.hostbuf.com/downloads/finalshell_install.exe</a></p><p>macOS版下载地址:<br><a href="http://www.hostbuf.com/downloads/finalshell_install.pkg" target="_blank" rel="noopener">http://www.hostbuf.com/downloads/finalshell_install.pkg</a></p><p>mac版安装路径<br>/Applications/FinalShell.app/Contents/Java/<br>配置文件路径<br>/Users/$USER/Library/FinalShell/</p><p>Linux版安装及教程:<br><a href="http://www.hostbuf.com/t/1059.html" target="_blank" rel="noopener">http://www.hostbuf.com/t/1059.html</a></p><p>更新日志:<br><a href="http://www.hostbuf.com/t/989.html主要特性" target="_blank" rel="noopener">http://www.hostbuf.com/t/989.html主要特性</a>:<br>1.多平台支持Windows,Mac OS X,Linux<br>2.多标签,批量服务器管理.<br>3.支持登录Ssh和Windows远程桌面.<br>4.漂亮的平滑字体显示,内置100多个配色方案.<br>5.终端,sftp同屏显示,同步切换目录.<br>6.命令自动提示,智能匹配,输入更快捷,方便.<br>7.sftp支持,通过各种优化技术,加载更快,切换,打开目录无需等待.<br>8.服务器网络,性能实时监控,无需安装服务器插件.<br>9.内置海外服务器加速,加速远程桌面和ssh连接,操作流畅无卡顿.<br>10.双边加速功能,大幅度提高访问服务器速度.<br>11.内存,Cpu性能监控,Ping延迟丢包,Trace路由监控.<br>12.实时硬盘监控.<br>13.进程管理器.<br>14.快捷命令面板,可同时显示数十个命令.<br>15.内置文本编辑器,支持语法高亮,代码折叠,搜索,替换.<br>16.ssh和远程桌面均支持代理服务器.<br>17.打包传输,自动压缩解压.<br>18.支持rz,sz (zmodem)<br>19.多地点ping监控</p><p>更多功能会逐步增加,保持最少每周一次更新的频率,敬请关注.</p><p>界面截图:<br>Shell终端<br><img src="http://www.hostbuf.com/upload/image/20170928/1506605329395082804.png" alt=""></p><p>进程管理器<br><img src="http://www.hostbuf.com/upload/image/20170426/1493144242449041493.png" alt=""><br>主机检测,Ping监控,Trace实时跟踪<br><img src="http://www.hostbuf.com/upload/image/20170426/1493144485765021287.png" alt=""></p><p>高级网络监控,监控每个进程监听的端口,以及网络连接状态</p><p><img src="http://www.hostbuf.com/upload/image/20171118/1511013349812005421.png" alt=""><br>双边加速<br><img src="http://www.hostbuf.com/upload/image/20170222/1487738221746093924.png" alt=""><br>打包传输,自动压缩解压,适合传输大量文件,文件夹和文本文件.</p><p><img src="http://www.hostbuf.com/upload/image/20170924/1506183003447079520.png" alt=""></p><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p><a href="http://www.hostbuf.com/" target="_blank" rel="noopener">http://www.hostbuf.com/</a></p><h2 id="百度下载链接"><a href="#百度下载链接" class="headerlink" title="百度下载链接"></a>百度下载链接</h2><p><a href="https://pan.baidu.com/s/10Ai33c13mn0vI7w0jfMPCg" target="_blank" rel="noopener">https://pan.baidu.com/s/10Ai33c13mn0vI7w0jfMPCg</a></p><h2 id="其他SSH工具"><a href="#其他SSH工具" class="headerlink" title="其他SSH工具"></a>其他SSH工具</h2><p><a href="https://pan.baidu.com/s/1MOrNzFHq6NIqiv4AbdoZyw" target="_blank" rel="noopener">Xshell6</a></p><p><a href="https://pan.baidu.com/s/1KCU3o4UdpyYlCG8HTvt-0g" target="_blank" rel="noopener">putty</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V2Ray</title>
      <link href="/2019/08/26/2019/v2ray/"/>
      <url>/2019/08/26/2019/v2ray/</url>
      
        <content type="html"><![CDATA[<h2 id="1-服务器端的安装，配置。"><a href="#1-服务器端的安装，配置。" class="headerlink" title="1. 服务器端的安装，配置。"></a>1. 服务器端的安装，配置。</h2><p>系统要求</p><ul><li>Debian 7</li><li>Debian 8（推荐）</li><li>Ubuntu 14</li><li>Ubuntu 16</li><li>CentOS 7<br>其他Linux版本不建议</li></ul><p>官方安装脚本自行搜索(较麻烦，所以我直接删除了)</p><p>VIM 快捷键使用：</p><p>输入i 进入编辑模式，修改完毕，Esc键退出编辑模式，输入:w保存文件，输入:q退出vim编辑。</p><h2 id="推荐的一键安装脚本："><a href="#推荐的一键安装脚本：" class="headerlink" title="推荐的一键安装脚本："></a>推荐的一键安装脚本：</h2><p>root 账号<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure></p><blockquote><p>如果提示 curl: command not found<br>请安装 Curl<br>ubuntu/debian 系统安装 Curl 方法: apt-get update -y &amp;&amp; apt-get install curl -y<br>centos 系统安装 Curl 方法: yum update -y &amp;&amp; yum install curl -y</p></blockquote><p>协议很多，可以搜索了解下，也可以直接用默认的。有的需要有域名（websocket tls），有的就不用（tcp，mkcp），如下图所示。<br><img src="https://i.loli.net/2019/08/26/z4XcZPe2nN8MmAs.png" alt=""></p><p>基本上按照提示一步步选择，回车就可以搞定了。</p><h2 id="快速管理命令："><a href="#快速管理命令：" class="headerlink" title="快速管理命令："></a>快速管理命令：</h2><p>v2ray info 查看 V2Ray 配置信息</p><p>v2ray config 修改 V2Ray 配置</p><p>v2ray link 生成 V2Ray 配置文件链接</p><p>v2ray infolink 生成 V2Ray 配置信息链接</p><p>v2ray qr 生成 V2Ray 配置二维码链接</p><p>v2ray ss 修改 Shadowsocks 配置</p><p>v2ray ssinfo 查看 Shadowsocks 配置信息</p><p>v2ray ssqr 生成 Shadowsocks 配置二维码链接</p><p>v2ray status 查看 V2Ray 运行状态</p><p>v2ray start 启动 V2Ray</p><p>v2ray stop 停止 V2Ray</p><p>v2ray restart 重启 V2Ray</p><p>v2ray log 查看 V2Ray 运行日志</p><p>v2ray update 更新 V2Ray</p><p>v2ray update.sh 更新 V2Ray 管理脚本</p><p>v2ray uninstall 卸载 V2Ray</p><h2 id="2-客户端配置"><a href="#2-客户端配置" class="headerlink" title="2. 客户端配置"></a>2. 客户端配置</h2><p>各平台客户端介绍和下载</p><h3 id="V2RayW-Win"><a href="#V2RayW-Win" class="headerlink" title="V2RayW Win"></a>V2RayW Win</h3><p>下载：<a href="https://github.com/Cenmrev/V2RayW" target="_blank" rel="noopener">https://github.com/Cenmrev/V2RayW</a></p><h3 id="V2RayN-Win"><a href="#V2RayN-Win" class="headerlink" title="V2RayN Win"></a>V2RayN Win</h3><p>下载：<a href="https://github.com/2dust/v2rayN" target="_blank" rel="noopener">https://github.com/2dust/v2rayN</a></p><h3 id="V2RayX-MAC"><a href="#V2RayX-MAC" class="headerlink" title="V2RayX MAC"></a>V2RayX MAC</h3><p>下载：<a href="https://github.com/Cenmrev/V2RayX" target="_blank" rel="noopener">https://github.com/Cenmrev/V2RayX</a></p><p>考虑到部分电脑软件只支持http协议，本地监测的端口有socks和http这俩。</p><ul><li>127.0.0.1+10808是socks。</li><li>127.0.0.1+10809是http。</li></ul><p><img src="https://i.loli.net/2019/08/26/texJTshkvzDliMg.png" alt="批注 2019-08-26 164604.png"><br>使用方法：</p><p>手机配置更简单，我用的 v2rayNG 直接扫描生成的二维码就好了。</p><p>一般协议的安装配置到此就结束了，可以直接去使用了。</p><h2 id="3-使用-Cloudflare-中转-V2Ray-WebSocket-的流量"><a href="#3-使用-Cloudflare-中转-V2Ray-WebSocket-的流量" class="headerlink" title="3.使用 Cloudflare 中转 V2Ray WebSocket 的流量"></a>3.使用 Cloudflare 中转 V2Ray WebSocket 的流量</h2><p>首先你得有域名，免费的可以到这里申请<a href="http://www.freenom.com/zh/index.html" target="_blank" rel="noopener">http://www.freenom.com/zh/index.html</a></p><p>会更改DNS，设置A记录就好了，很久之前我也写过介绍的文章，这里就不重复了，搜索到处都有。</p><p>安装时传输协议选择 WebSocket (即选择 3 )，V2Ray 端口选择 80，其他就默认。等待安装完成之后生成二维码或者配置参数。</p><p>输入 v2ray status 看看 V2Ray 有没有在运行，如果没有，使用 netstat -lp 看看是什么程序占用了 80 / http ，解决占用程序，然后使用 v2ray start 启动 V2Ray。</p><p>在 Cloudflare 注册登录加入域名解析，Crypto 那里设置 SSL 为 Flexible，DNS 那里添加一个 A 记录指向服务器 IP ，Status 那里的图标务必为橙色状态，即是 DNS and HTTP proxy(CDN)。</p><p>V2Ray 配置信息<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">地址 (Address) = 域名</span><br><span class="line">端口 (Port) = 443</span><br><span class="line">用户ID (User ID) = 用户ID</span><br><span class="line">额外ID (Alter Id) = 233</span><br><span class="line">传输协议 (Network) = ws (WebSocket)</span><br><span class="line">伪装类型 (header type) = none</span><br><span class="line">TLS = 打开</span><br></pre></td></tr></table></figure></p><p>备注：</p><ol><li>以上使用 Cloudflare 中转 V2Ray 的 WebSocket 流量，由于 Cloudflare 实现了 TLS ，所以 V2Ray 配置信息请以上面的内容为准。<br>这种方式比较简单的利用了 Cloudflare 的 TLS，服务器和客户端两端的配置也相对很简单，而且，可以用多个域名来指向一个服务器，那就不怕封了。</li><li>在服务器端也可以实现 TLS。先在 DNS 那里修改之前添加的 IP 记录，将 Status 那里的图标点一下让它变成灰色状态，即是 DNS only. 然后在 Crypto 那里设置 SSL 为 Full。<br>如果当前 V2Ray 端口为 80，输入 v2ray config 回车，选择修改端口即可，修改的端口随便输入，只要不是 80 或者 443 即可。<br>再次输入 v2ray config 回车，选择修改传输协议，选择 WebSocket + TLS ，即是选择 4。按提示输入域名，域名解析 Y ，自动配置 TLS 也是 Y ，后面还会安装 Caddy 按回车继续，等待配置自动完成，生成配置二维码。<br>等配置完成后，Cloudflare 的 DNS，将 Status 那里的图标点一下让它变成橙色状态，即是 DNS and HTTP proxy(CDN)。<br>这样全部实现 TLS 配置就结束了，可以打开客户端试试。这种方式是两端都是 TLS ，但域名只能绑定一个。<br>以上两种方法各有优缺点，我选择的是第一种。</li></ol><h2 id="推荐目前我觉得还算便宜，服务还算可靠的-VPS"><a href="#推荐目前我觉得还算便宜，服务还算可靠的-VPS" class="headerlink" title="推荐目前我觉得还算便宜，服务还算可靠的 VPS"></a>推荐目前我觉得还算便宜，服务还算可靠的 VPS</h2><p>使用下面链接，新用户充值有奖励，谢谢!<br><a href="https://www.vultr.com/?ref=7270890" target="_blank" rel="noopener"><img src="https://www.vultr.com/media/banners/banner_800x418.png" width="800" height="418"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo之换电脑了怎么办</title>
      <link href="/2018/03/14/2018/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2018/03/14/2018/Hexo%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="1、从官网Git下载git，"><a href="#1、从官网Git下载git，" class="headerlink" title="1、从官网Git下载git，"></a>1、从官网Git下载git，</h2><p>在新电脑上安装，因为https速度慢，而且每次都要输入口令，常用的是使用ssh。使用下面方法创建：<br>（1）打开git bash，在用户主目录下运行：ssh-keygen -t rsa -C “youremail@example.com” 把其中的邮件地址换成自己的邮件地址，然后一路回车<br>（2）最后完成后，会在用户主目录下生成.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH key密钥对，id_rsa是私钥，千万不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。<br>（3）登陆GitHub，打开「Settings」-&gt;「SSH and GPG keys」，然后点击「new SSH key」，填上任意Title，在Key文本框里粘贴公钥id_rsa.pub文件的内容（千万不要粘贴成私钥了！），最后点击「Add SSH Key」，你就应该看到已经添加的Key。<br>注意：不要在git版本库中运行ssh，然后又将它提交，这样就把密码泄露出去了。</p><h2 id="2、下载Node-js，并安装"><a href="#2、下载Node-js，并安装" class="headerlink" title="2、下载Node.js，并安装"></a>2、下载Node.js，并安装</h2><h2 id="3、打开git-bash客户端，输入-npm-install-hexo-cli-g，开始安装hexo"><a href="#3、打开git-bash客户端，输入-npm-install-hexo-cli-g，开始安装hexo" class="headerlink" title="3、打开git bash客户端，输入 npm install hexo-cli -g，开始安装hexo"></a>3、打开git bash客户端，输入 npm install hexo-cli -g，开始安装hexo</h2><h2 id="4、下面就将原来的文件拷贝到新电脑中，"><a href="#4、下面就将原来的文件拷贝到新电脑中，" class="headerlink" title="4、下面就将原来的文件拷贝到新电脑中，"></a>4、下面就将原来的文件拷贝到新电脑中，</h2><p>但是要注意哪些文件是必须的，哪些文件是可以删除的。<br>（1）讨论下哪些文件是必须拷贝的：首先是之前自己修改的文件，像站点配置_config.yml，theme文件夹里面的主题，以及source里面自己写的博客文件，这些肯定要拷贝的。除此之外，还有三个文件需要有，就是scaffolds文件夹（文章的模板）、package.json（说明使用哪些包）和.gitignore（限定在提交的时候哪些文件可以忽略）。其实，这三个文件不是我们修改的，所以即使丢失了，也没有关系，我们可以建立一个新的文件夹，然后在里面执行hexo init，就会生成这三个文件，我们只需要将它们拷贝过来使用即可。总结：_config.yml，theme/，source/，scaffolds/，package.json，.gitignore，是需要拷贝的。<br>（2）再讨论下哪些文件是不必拷贝的，或者说可以删除的：首先是.git文件，无论是在站点根目录下，还是主题目录下的.git文件，都可以删掉。然后是文件夹node_modules（在用npm install会重新生成），public（这个在用hexo g时会重新生成），.deploy_git文件夹（在使用hexo d时也会重新生成），db.json文件。其实上面这些文件也就是.gitignore文件里面记载的可以忽略的内容。总结：.git/，node_modules/，public/，.deploy_git/，db.json文件需要删除。</p><h2 id="5、在git-bash中切换目录到新拷贝的文件夹里"><a href="#5、在git-bash中切换目录到新拷贝的文件夹里" class="headerlink" title="5、在git bash中切换目录到新拷贝的文件夹里"></a>5、在git bash中切换目录到新拷贝的文件夹里</h2><p>，使用 npm install 命令，进行模块安装。很明显我们这里没用hexo init初始化，因为有的文件我们已经拷贝生成过来了，所以不必用hexo init去整体初始化，如果不慎在此时用了hexo init，则站点的配置文件_config.yml里面内容会被清空使用默认值，所以这一步一定要慎重，不要用hexo init。</p><h2 id="6、安装其他的一些必要组件"><a href="#6、安装其他的一些必要组件" class="headerlink" title="6、安装其他的一些必要组件"></a>6、安装其他的一些必要组件</h2><p>，如果在node_modules里面有的，就不要重复安装了：<br>（1）为了使用hexo d来部署到git上，需要安装<br>npm install hexo-deployer-git –save<br>（2）为了建立RSS订阅，需要安装<br>npm install hexo-generator-feed –save<br>（3）为了建立站点地图，需要安装<br>npm install hexo-generator-sitemap –save<br>插件安装后，有的需要对配置文件_config.yml进行配置，具体怎么配置，可以参考上面插件在github主页上的具体说明</p><h2 id="7、使用hexo-g，然后使用hexo-d进行部署，如果都没有出错，就转移成功了！"><a href="#7、使用hexo-g，然后使用hexo-d进行部署，如果都没有出错，就转移成功了！" class="headerlink" title="7、使用hexo g，然后使用hexo d进行部署，如果都没有出错，就转移成功了！"></a>7、使用hexo g，然后使用hexo d进行部署，如果都没有出错，就转移成功了！</h2><p>作者：skycrown<br>链接：<a href="https://www.zhihu.com/question/21193762/answer/103097754" target="_blank" rel="noopener">https://www.zhihu.com/question/21193762/answer/103097754</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片问题</title>
      <link href="/2017/12/15/17/12.15hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/"/>
      <url>/2017/12/15/17/12.15hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="博客图片问题"><a href="#博客图片问题" class="headerlink" title="博客图片问题"></a>博客图片问题</h2><h3 id="使用markdown写文章，插入图片的格式为图片名称，这里要说的是链接地址怎么写。"><a href="#使用markdown写文章，插入图片的格式为图片名称，这里要说的是链接地址怎么写。" class="headerlink" title="使用markdown写文章，插入图片的格式为图片名称，这里要说的是链接地址怎么写。"></a>使用markdown写文章，插入图片的格式为图片名称，这里要说的是链接地址怎么写。</h3><p>对于hexo，有两种方式： </p><ol><li><p>使用本地路径：在hexo/source目录下新建一个img文件夹，将图片放入该文件夹下，插入图片时链接即为/img/图片名称。 </p></li><li><p>使用图床，地址 <a href="http://upload.otar.im/" target="_blank" rel="noopener">http://upload.otar.im/</a> 将图片拖入区域中，会生成图片的URL，这就是链接地址。</p></li><li><p>使用七牛云 <a href="https://portal.qiniu.com" target="_blank" rel="noopener">https://portal.qiniu.com</a> </p></li></ol><p><img src="https://i.loli.net/2017/12/15/5a335143a4889.jpg" alt="wallhaven-599800.jpg"></p><h3 id="更多图床网站"><a href="#更多图床网站" class="headerlink" title="更多图床网站"></a>更多图床网站</h3><ul><li><a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a></li><li><a href="https://tu.aixinxi.net/index.php" target="_blank" rel="noopener">https://tu.aixinxi.net/index.php</a></li><li><a href="https://simimg.com/wangwenzhi" target="_blank" rel="noopener">https://simimg.com/wangwenzhi</a></li><li><a href="https://www.picb.cc/" target="_blank" rel="noopener">https://www.picb.cc/</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 语法手册</title>
      <link href="/2017/12/11/17/12.11Markdown%20%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/"/>
      <url>/2017/12/11/17/12.11Markdown%20%E8%AF%AD%E6%B3%95%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是markdown"><a href="#什么是markdown" class="headerlink" title="什么是markdown"></a>什么是markdown</h2><p><iframe width="700" height="500" src="https://www.youtube-nocookie.com/embed/EigxHkpqJdA?controls=0&amp;start=26" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><br>    markdown</p><h2 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h2><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*斜体*或_斜体_</span><br><span class="line">**粗体**</span><br><span class="line">***加粗斜体***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p><h2 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h2><p>第一种写法：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span><br></pre></td></tr></table></figure></p><p>第二种写法：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一级标题</span></span><br><span class="line"><span class="comment">## 二级标题</span></span><br><span class="line"><span class="comment">### 三级标题</span></span><br><span class="line"><span class="comment">#### 四级标题</span></span><br><span class="line"><span class="comment">##### 五级标题</span></span><br><span class="line"><span class="comment">###### 六级标题</span></span><br></pre></td></tr></table></figure></p><p>由于用了[TOC]标记编辑器会把所有标题写到目录大纲中，在这里写的演示标题也会列进去，所以就不演示了。同学们自己在编辑器中观察，很简单，一级标题字号最大，依级递减。</p><h2 id="3-超链接"><a href="#3-超链接" class="headerlink" title="3. 超链接"></a>3. 超链接</h2><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式，行内式一般使用较多。</p><p> 3.1. 行内式<br>语法说明：</p><p>[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性可加可不加。title属性的效果是鼠标悬停在链接上会出现指定的 title文字。<a href="链接地址 “链接标题”">链接文字</a>’这样的形式。链接地址与链接标题前有一个空格。<br>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">欢迎来到[王文志博客](http://wangwenzhi.top)</span><br><span class="line">欢迎来到[王文志博客](http://wangwenzhi.top <span class="string">"王文志博客"</span>)</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p>欢迎来到<a href="http://wangwenzhi.top" target="_blank" rel="noopener">王文志博客</a><br>欢迎来到<a href="http://wangwenzhi.top" title="王文志博客" target="_blank" rel="noopener">王文志博客</a></p><p> 3.2. 参考式<br>参考式超链接一般用在学术论文上面，或者另一种情况，如果某一个链接在文章中多处使用，那么使用引用 的方式创建链接将非常好，它可以让你对链接进行统一的管理。</p><p>语法说明：<br>参考式链接分为两部分，文中的写法 [链接文字][链接标记]，在文本的任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格。</p><p>如果链接文字本身可以做为链接标记，你也可以写成[链接文字][]<br>[链接文字]：链接地址的形式，见代码的最后一行。</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">我经常去的几个网站[Google][1]、[Leanote][2]以及[自己的博客][3]</span><br><span class="line">[Leanote 笔记][2]是一个不错的[网站][]。</span><br><span class="line">[1]:http://www.google.com <span class="string">"Google"</span></span><br><span class="line">[2]:http://www.leanote.com <span class="string">"Leanote"</span></span><br><span class="line">[3]:http://http://blog.leanote.com/freewalk <span class="string">"梵居闹市"</span></span><br><span class="line">[网站]:http://http://blog.leanote.com/freewalk</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p>我经常去的几个网站<a href="http://www.google.com" title="Google" target="_blank" rel="noopener">Google</a>、<a href="http://www.leanote.com" title="Leanote" target="_blank" rel="noopener">Leanote</a>以及<a href="http://http://blog.leanote.com/freewalk" title="梵居闹市" target="_blank" rel="noopener">自己的博客</a><br><a href="http://www.leanote.com" title="Leanote" target="_blank" rel="noopener">Leanote 笔记</a>是一个不错的<a href="http://http://blog.leanote.com/freewalk" target="_blank" rel="noopener">网站</a>。</p><p> 3.3. 自动链接</p><p>语法说明：<br>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;http://example.com/&gt;</span><br><span class="line">&lt;address@example.com&gt;</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p><a href="http://example.com/" target="_blank" rel="noopener">http://example.com/</a><br><a href="&#109;&#97;&#x69;&#108;&#116;&#x6f;&#x3a;&#x61;&#100;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;">&#x61;&#100;&#x64;&#x72;&#x65;&#115;&#115;&#64;&#101;&#120;&#x61;&#x6d;&#112;&#x6c;&#101;&#46;&#x63;&#x6f;&#x6d;</a></p><h2 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h2><p> 5.1. 无序列表</p><p>代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- 无序列表项 一</span><br><span class="line">- 无序列表项 二</span><br><span class="line">- 无序列表项 三</span><br></pre></td></tr></table></figure><ul><li>无序列表项 一</li><li>无序列表项 二</li><li>无序列表项 三<br>5.2. 有序列表</li></ul><p>有序列表则使用数字接着一个英文句点。</p><p>代码：<br> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. 有序列表项 一</span><br><span class="line">2. 有序列表项 二</span><br><span class="line">3. 有序列表项 三</span><br></pre></td></tr></table></figure></p><ol><li>有序列表项 一</li><li>有序列表项 二</li><li>有序列表项 三<br>5.3. 定义型列表<br>语法说明：</li></ol><p>定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法:紧跟一个缩进(Tab)</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Markdown</span><br><span class="line">:    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">代码块 2</span><br><span class="line">:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</span><br><span class="line">        代码块（左侧有八个不可见的空格）</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p>Markdown<br>:    轻量级文本标记语言，可以转换成html，pdf等格式（左侧有一个可见的冒号和四个不可见的空格）<br>代码块 2<br>:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）<br>        代码块（左侧有八个不可见的空格）</p><p> 5.3. 列表缩进<br>语法说明：</p><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多 3 个空格，项目标记后面则一定要接着至少一个空格或制表符。</p><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好（显示效果与代码一致）：</p><p>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！<br>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！<br>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。<br>但是如果你懒，那也行： </p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ </span><br><span class="line">*   那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br></pre></td></tr></table></figure></p><p> 5.4. 包含段落的列表<br>语法说明：</p><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符（显示效果与代码一致）：</p><p>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。<br>软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</p><p>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。<br>寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。<br>但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！</p><p>悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</p><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*   轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</span><br><span class="line">那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。 </span><br><span class="line">软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！</span><br><span class="line">     那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。 </span><br><span class="line">寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。 </span><br><span class="line">但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！ </span><br><span class="line">*    悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。</span><br></pre></td></tr></table></figure></p><p> 5.5. 包含引用的列表<br>语法说明：</p><p>如果要在列表项目内放进引用，那 &gt; 就需要缩进：</p><p>代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*   阅读的方法:</span><br><span class="line">    &gt; 打开书本。</span><br><span class="line">    &gt; 打开电灯。</span><br></pre></td></tr></table></figure><p> 5.6. 包含代码区块的引用<br>语法说明：<br>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p><p>一列表项包含一个列表区块：</p><h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6. 引用"></a>6. 引用</h2><p>语法说明：</p><p>引用需要在被引用的文本前加上&gt;符号。</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用,</span><br><span class="line">&gt; 无意义的占行文字1.</span><br><span class="line">&gt; 无意义的占行文字2.</span><br><span class="line">&gt; </span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">&gt; 无意义的占行文字4.</span><br></pre></td></tr></table></figure></p><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; 这是一个有两段文字的引用,</span><br><span class="line">无意义的占行文字1.</span><br><span class="line">无意义的占行文字2.</span><br><span class="line">&gt; 无意义的占行文字3.</span><br><span class="line">无意义的占行文字4.</span><br></pre></td></tr></table></figure></p><p> 6.1. 引用的多层嵌套<br>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白</span><br><span class="line">&gt;&gt; 自己看教程！ - 愤青</span><br><span class="line">&gt; 教程在哪？ - 小白</span><br></pre></td></tr></table></figure></p><p> 6.2. 引用其它要素<br>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><p>代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; 1.   这是第一行列表项。</span><br><span class="line">&gt; 2.   这是第二行列表项。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 给出一些例子代码：</span><br><span class="line">&gt; </span><br><span class="line">&gt;     <span class="built_in">return</span> shell_exec(<span class="string">"echo <span class="variable">$input</span> | <span class="variable">$markdown_script</span>"</span>);</span><br></pre></td></tr></table></figure><h2 id="7-插入图像"><a href="#7-插入图像" class="headerlink" title="7. 插入图像"></a>7. 插入图像</h2><p>图片的创建方式与超链接相似，而且和超链接一样也有两种写法，行内式和参考式写法。</p><p>语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略，但建议写上。</p><p> 7.1. 行内式</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">美丽花儿： </span><br><span class="line">![美丽花儿](http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg <span class="string">"美丽花儿"</span>)</span><br></pre></td></tr></table></figure></p><p>美丽花儿：<br><img src="http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg" alt="美丽花儿" title="美丽花儿"></p><p> 7.2. 参考式</p><p>语法说明：</p><p>在文档的最后写上[标记]:图片地址 “Title”</p><p>代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">美丽花儿：</span><br><span class="line">![美丽花儿][flower]</span><br><span class="line">[flower]:http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg  <span class="string">"美丽花儿"</span></span><br></pre></td></tr></table></figure><p>美丽花儿：<br><img src="http://ww2.sinaimg.cn/large/56d258bdjw1eugeubg8ujj21kw16odn6.jpg" alt="美丽花儿" title="美丽花儿"></p><h2 id="8-内容目录"><a href="#8-内容目录" class="headerlink" title="8. 内容目录"></a>8. 内容目录</h2><h2 id="9-注脚"><a href="#9-注脚" class="headerlink" title="9. 注脚"></a>9. 注脚</h2><p>语法说明：</p><p>在需要添加注脚的文字后加上脚注名字[^注脚名字],称为加注。 然后在文本的任意位置(一般在最后)添加脚注，脚注前必须有对应的脚注名字。</p><p>注意：经测试注脚与注脚之间必须空一行，不然会失效。成功后会发现，即使你没有把注脚写在文末，经Markdown转换后，也会自动归类到文章的最后。</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote[^Le] 编辑器进行书写。</span><br><span class="line">[^1]:Markdown是一种纯文本标记语言</span><br><span class="line">[^2]:HyperText Markup Language 超文本标记语言</span><br><span class="line">[^Le]:开源笔记平台，支持Markdown和笔记直接发为博文</span><br></pre></td></tr></table></figure></p><p>使用 Markdown<a href="Markdown是一种纯文本标记语言">^1</a>可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Leanote<a href="开源笔记平台，支持Markdown和笔记直接发为博文">^Le</a> 编辑器进行书写。</p><p>[^2]:HyperText Markup Language 超文本标记语言</p><p>注：脚注自动被搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转回到加注的地方。</p><h2 id="10-LaTeX-公式"><a href="#10-LaTeX-公式" class="headerlink" title="10. LaTeX 公式"></a>10. LaTeX 公式</h2><p> 10.1. $ 表示行内公式：</p><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">质能守恒方程可以用一个很简洁的方程式 <span class="variable">$E</span>=mc^2$ 来表达。</span><br></pre></td></tr></table></figure></p><p> 10.2 $$ 表示整行公式：<br>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$$\sum_&#123;i=1&#125;^n a_i=0$$</span><br><span class="line">$<span class="variable">$f</span>(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</span><br><span class="line">$$\sum^&#123;j-1&#125;_&#123;k=0&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$</span><br></pre></td></tr></table></figure></p><p>显示效果：</p><p>$$\sum_{i=1}^n a_i=0$$<br>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x<em>n^2 $$<br>$$\sum^{j-1}</em>{k=0}{\widehat{\gamma}_{kj} z_k}$$</p><h2 id="11-流程图"><a href="#11-流程图" class="headerlink" title="11. 流程图"></a>11. 流程图</h2><p>代码：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">flow</span><br><span class="line">st=&gt;start: Start:&gt;https://www.zybuluo.com</span><br><span class="line">io=&gt;inputoutput: verification</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">sub=&gt;subroutine: Your Subroutine</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;io-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure></p><p>flow<br>st=&gt;start: Start:&gt;<a href="https://www.zybuluo.com" target="_blank" rel="noopener">https://www.zybuluo.com</a><br>io=&gt;inputoutput: verification<br>op=&gt;operation: Your Operation<br>cond=&gt;condition: Yes or No?<br>sub=&gt;subroutine: Your Subroutine<br>e=&gt;end<br>st-&gt;io-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;sub-&gt;io</p><h2 id="12-表格"><a href="#12-表格" class="headerlink" title="12 .表格"></a>12 .表格</h2><p>语法说明：</p><p>不管是哪种方式，第一行为表头，第二行分隔表头和主体部分，第三行开始每一行为一个表格行。<br>列于列之间用管道符|隔开。原生方式的表格每一行的两边也要有管道符。<br>第二行还可以为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。<br>代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">简单方式写表格：</span><br><span class="line"></span><br><span class="line">学号|姓名|分数</span><br><span class="line">-|-|-</span><br><span class="line">小明|男|75</span><br><span class="line">小红|女|79</span><br><span class="line">小陆|男|92</span><br><span class="line">原生方式写表格：</span><br><span class="line"></span><br><span class="line">|学号|姓名|分数|</span><br><span class="line">|-|-|-|</span><br><span class="line">|小明|男|75|</span><br><span class="line">|小红|女|79|</span><br><span class="line">|小陆|男|92|</span><br><span class="line">为表格第二列指定方向：</span><br><span class="line"></span><br><span class="line">产品|价格</span><br><span class="line">-|-:</span><br><span class="line">Leanote 高级账号|60元/年</span><br><span class="line">Leanote 超级账号|120元/年</span><br></pre></td></tr></table></figure><p>简单方式写表格：</p><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>小明</td><td>男</td><td>75</td></tr><tr><td>小红</td><td>女</td><td>79</td></tr><tr><td>小陆</td><td>男</td><td>92</td></tr></tbody></table><p>原生方式写表格：</p><table><thead><tr><th>学号</th><th>姓名</th><th>分数</th></tr></thead><tbody><tr><td>小明</td><td>男</td><td>75</td></tr><tr><td>小红</td><td>女</td><td>79</td></tr><tr><td>小陆</td><td>男</td><td>92</td></tr></tbody></table><p>为表格第二列指定方向：</p><table><thead><tr><th>产品</th><th style="text-align:right">价格</th></tr></thead><tbody><tr><td>Leanote 高级账号</td><td style="text-align:right">60元/年</td></tr><tr><td>Leanote 超级账号</td><td style="text-align:right">120元/年</td></tr></tbody></table><h2 id="14-代码"><a href="#14-代码" class="headerlink" title="14. 代码"></a>14. 代码</h2><p>代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">第一个例子：</span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">"footer"</span>&gt;</span><br><span class="line">   © 2004 Foo Corporation</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">第二个例子：</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th rowspan=<span class="string">"2"</span>&gt;值班人员&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;星期一&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;星期二&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;星期三&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;李强&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;张明&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;王平&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>第一个例子：</p><p><div class="footer"><br>   © 2004 Foo Corporation<br></div><br>第二个例子：</p><table><br>    <tr><br>        <th rowspan="2">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
